@using BlazorTetris.Tetris
@inject IScoreService ScoreService

<h2>High Scores</h2>

@if (top is null)
{
    <p>Loading…</p>
}
else if (top.Count == 0)
{
    <p>No scores yet.</p>
}
else
{
    <table>
        <thead><tr><th>#</th><th>Name</th><th>Points</th><th>Date</th></tr></thead>
        <tbody>
            @for (int i = 0; i < top.Count; i++)
            {
                <tr>
                    <td>@(i + 1)</td>
                    <td>@top[i].Name</td>
                    <td>@top[i].Points</td>
                    <td>@top[i].WhenUtc.LocalDateTime.ToString("yyyy-MM-dd HH:mm")</td>
                </tr>
            }
        </tbody>
    </table>
}

<div class="row gap">
    <button @onclick="Back">Back</button>
    <button @onclick="ClearAll">Clear all</button>
</div>

@code {
    private List<ScoreEntry>? top;

    protected override async Task OnInitializedAsync()
        => top = (await ScoreService.GetTopAsync(10)).ToList();

    [Parameter] public EventCallback OnBack { get; set; }

    private Task Back() => OnBack.InvokeAsync();

    private async Task ClearAll()
    {
        await ScoreService.ClearAsync();
        top = new();
    }
}